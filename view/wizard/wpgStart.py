#!/usr/bin/env python
# -*- coding: utf-8 -*-
#** -----------------------------------------------------------------------------------------------
#*  pyACME
#*  Copyright (c) 2010, Milton Abrunhosa
#*  -----------------------------------------------------------------------------------------------
#*  Package..: SiPAR
#*  Classe...: wpgStart
#*
#*  Descrição: interface principal do programa
#*  -----------------------------------------------------------------------------------------------
#*  Detalhes de Alteração
#*  -----------------------------------------------------------------------------------------------
#*  mlabru   2010/AGO/29  versão 1.0 started
#*  -----------------------------------------------------------------------------------------------
#*  Detalhes de Versão
#*  -----------------------------------------------------------------------------------------------
#*  start    2010/AGO/29  versão inicial
#*  -----------------------------------------------------------------------------------------------
#*/

#** -----------------------------------------------------------------------------------------------
#*  includes
#*  -----------------------------------------------------------------------------------------------
#*/

#/ log4Py (logger)
#/ ------------------------------------------------------------------------------------------------
import logging

#/ PyQt
#/ ------------------------------------------------------------------------------------------------
from PyQt4 import QtCore, QtGui

#/ SiPAR / model
#/ ------------------------------------------------------------------------------------------------
import model.clsExe as clsExe
import model.locData as locData

#/ SiPAR / view
#/ ------------------------------------------------------------------------------------------------
import view.wizard.acmeWizardPage as acmeWizardPage

#** -----------------------------------------------------------------------------------------------
#*  defines
#*  -----------------------------------------------------------------------------------------------
#*/

#** -----------------------------------------------------------------------------------------------
#*  variáveis globais
#*  -----------------------------------------------------------------------------------------------
#*/

#/ logging level
#/ ------------------------------------------------------------------------------------------------
#w_logLvl = logging.INFO
w_logLvl = logging.DEBUG

#** -----------------------------------------------------------------------------------------------
#*  wpgStart::wpgStart
#*  -----------------------------------------------------------------------------------------------
#*  DOCUMENT ME!
#*  -----------------------------------------------------------------------------------------------
#*/
class wpgStart ( acmeWizardPage.acmeWizardPage ):

    #** -------------------------------------------------------------------------------------------
    #*  wpgStart::__init__
    #*  -------------------------------------------------------------------------------------------
    #*  initializes the main menu
    #*  -------------------------------------------------------------------------------------------
    #*  @param  f_wizard - DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def __init__ ( self, f_wizard=None ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        l_szMetodo = "wpgStart::__init__"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( w_logLvl )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  init super class
        #*/
        acmeWizardPage.acmeWizardPage.__init__ ( self, f_wizard )

        #** ---------------------------------------------------------------------------------------
        #*  locale
        #*/
        self.setLocale ( QtCore.QLocale ( QtCore.QLocale.Portuguese, QtCore.QLocale.Brazil ))

        #** ---------------------------------------------------------------------------------------
        #*  imagem
        #*/
        l_image = QtGui.QLabel ( self )
        #assert ( l_image )

        l_image.setGeometry ( QtCore.QRect ( 20, 30, 256, 290 ))
        l_image.setBackgroundRole ( QtGui.QPalette.Base )
        l_image.setSizePolicy ( QtGui.QSizePolicy.Ignored, QtGui.QSizePolicy.Ignored )
        l_image.setScaledContents ( True )

        l_image.setPixmap ( QtGui.QPixmap.fromImage ( QtGui.QImage ( "data/images/wpgStart.jpg" )))

        #** ---------------------------------------------------------------------------------------
        #*  título da página
        #*/
        l_lblTitle = QtGui.QLabel ( self )
        #assert ( l_lblTitle )

        l_lblTitle.setGeometry ( QtCore.QRect ( 300, 30, 400, 32 ))
        l_lblTitle.setText ( self.tr ( "<center><font color=\"blue\" size=\"14\"><b><i>"
                                       "SiPAR 3.01"
                                       "</i></b></font></center>" ))

        #** ---------------------------------------------------------------------------------------
        #*  grid
        #*/
        l_gridLayoutWidget = QtGui.QWidget ( self )
        #assert ( l_gridLayoutWidget )

        l_gridLayoutWidget.setGeometry ( QtCore.QRect ( 350, 100, 300, 150 ))

        #** ---------------------------------------------------------------------------------------
        #*  fonte dos ítens
        #*/
        l_font = QtGui.QFont ()
        #assert ( l_font )

        l_font.setPointSize ( 12 )

        #** ---------------------------------------------------------------------------------------
        #*  intensidade do vento
        #*/
        self._rbtOpen = QtGui.QRadioButton ( l_gridLayoutWidget )
        #assert ( self._rbtOpen )

        self._rbtOpen.setFont ( l_font )
        self._rbtOpen.setText ( self.tr ( u"&Abrir exercício existente..." ))

        self.setFocusProxy ( self._rbtOpen )

        #** ---------------------------------------------------------------------------------------
        #*  direção do vento
        #*/
        self._rbtNew = QtGui.QRadioButton ( l_gridLayoutWidget )
        #assert ( self._rbtNew )

        self._rbtNew.setFont ( l_font )
        self._rbtNew.setText ( self.tr ( u"&Criar um novo exercício..." ))

        #** ---------------------------------------------------------------------------------------
        #*  layout
        #*/
        l_lay = QtGui.QGridLayout ( l_gridLayoutWidget )
        #assert ( l_lay )

        l_lay.setMargin ( 10 )
        l_lay.setSpacing ( 10 )

        l_lay.addWidget ( self._rbtOpen, 0, 0 )
        l_lay.addWidget ( self._rbtNew,  1, 0 )

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*  wpgStart::nextPage
    #*  -------------------------------------------------------------------------------------------
    #*  próxima página na seqüência do wizard
    #*  -------------------------------------------------------------------------------------------
    #*  @param  nenhum
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def nextPage ( self ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        l_szMetodo = "wpgStart::nextPage"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( w_logLvl )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  selecionou abrir exercício ?
        #*/
        if ( self._rbtOpen.isChecked ()):

            #** -----------------------------------------------------------------------------------
            #*  próxima página, escolher o exercício na tabela
            #*/
            l_pgNext = self._oWizard._pagTabExe

        #** ---------------------------------------------------------------------------------------
        #*  senão, selecionou criar exercício
        #*/
        else:

            #** -----------------------------------------------------------------------------------
            #*  cria um exercício
            #*/
            locData.g_oExe = clsExe.clsExe ()
            #assert ( locData.g_oExe )

            #** -----------------------------------------------------------------------------------
            #*  próxima página, escolher o sítio PAR
            #*/
            l_pgNext = self._oWizard._pagTabPAR

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

        #** ---------------------------------------------------------------------------------------
        #*/
        return ( l_pgNext )

    #** -------------------------------------------------------------------------------------------
    #*  wpgStart::resetPage
    #*  -------------------------------------------------------------------------------------------
    #*  reseta os campos da form
    #*  -------------------------------------------------------------------------------------------
    #*  @param  nenhum
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def resetPage ( self ):

        #/ nome do metodo (logger)
        #/ ----------------------------------------------------------------------------------------
        l_szMetodo = "wpgStart::resetPage"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( w_logLvl )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  seleciona botão abrir exercício
        #*/
        self._rbtOpen.setChecked ( True )

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

#** -----------------------------------------------------------------------------------------------
#*/
logger = logging.getLogger ( "wpgStart" )

#** -----------------------------------------------------------------------------------------------
#*/
logger.setLevel ( w_logLvl )

#** -----------------------------------------------------------------------------------------------
#*  this is the bootstrap process
#*/
if ( '__main__' == __name__ ):

    #** -------------------------------------------------------------------------------------------
    #*  m.poirot logger
    #*/
    logging.basicConfig ()

    #** -------------------------------------------------------------------------------------------
    #*
    l_wpg = wpgStart ()
    #assert ( l_wpg )

#** ----------------------------------------------------------------------------------------------- *#
