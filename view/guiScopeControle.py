#!/usr/bin/env python
# -*- coding: utf-8 -*-
#** -----------------------------------------------------------------------------------------------
#*  pyACME
#*  Copyright (c) 2009, Milton Abrunhosa
#*  -----------------------------------------------------------------------------------------------
#*  Package..: SiPAR
#*  Classe...: guiScopeControle
#*
#*  Descrição: this class takes care of all interaction with the user
#*  -----------------------------------------------------------------------------------------------
#*  Detalhes de Alteração       
#*  -----------------------------------------------------------------------------------------------
#*  well     1997/fev/12  versão 1.0 started
#*  mlabru   2009/set/01  versão 3.0 started
#*  -----------------------------------------------------------------------------------------------
#*  Detalhes de Versão
#*  -----------------------------------------------------------------------------------------------
#*  start    1997/fev/12  versão inicial (DOS/Modula-2)
#*  3.01-01  2009/set/01  versão para Linux
#*  -----------------------------------------------------------------------------------------------
#*/

#** -----------------------------------------------------------------------------------------------
#*  includes
#*  -----------------------------------------------------------------------------------------------
#*/

#/ Python library
#/ ------------------------------------------------------------------------------------------------
import math

#/ log4Py (logger)
#/ ------------------------------------------------------------------------------------------------
import logging

#/ pyGame (biblioteca gráfica)
#/ ------------------------------------------------------------------------------------------------
import pygame
import pygame.font
import pygame.image

from pygame.locals import *

#/ SiPAR / model
#/ ------------------------------------------------------------------------------------------------
import model.glbDefs as glbDefs
import model.locDefs as locDefs

#/ SiPAR / view
#/ ------------------------------------------------------------------------------------------------
import view.guiScopeModel as guiScopeModel

import view.viewVideoAlidades as viewVideoAlidades
import view.viewVideoBruto as viewVideoBruto
import view.viewVideoSintetico as viewVideoSintetico
import view.viewUtils as viewUtils

#** -----------------------------------------------------------------------------------------------
#*  variáveis globais
#*  -----------------------------------------------------------------------------------------------
#*/

#/ logging level
#/ ------------------------------------------------------------------------------------------------
#w_logLvl = logging.INFO
w_logLvl = logging.DEBUG

#** -----------------------------------------------------------------------------------------------
#*  guiScopeControle::guiScopeControle
#*  -----------------------------------------------------------------------------------------------
#*  DOCUMENT ME!
#*  -----------------------------------------------------------------------------------------------
#*/
class guiScopeControle ( guiScopeModel.guiScopeModel ):

    #** -------------------------------------------------------------------------------------------
    #*  guiScopeControle::__init__
    #*  -------------------------------------------------------------------------------------------
    #*  initializes the scope area
    #*  -------------------------------------------------------------------------------------------
    #*  @param  f_cm  - control manager
    #*  @param  f_srf - background surface
    #*  @param  f_tNW - ponto ( X, Y ) do canto superior direito (NW)
    #*  @param  f_tWH - tupla com largura e altura
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def __init__ ( self, f_cm, f_srf, f_tNW, f_tWH ):

        #/ nome do método (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "guiScopeControle::__init__"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( w_logLvl )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parâmetros de entrada
        #*/
        #assert ( f_cm )

        #assert ( f_srf )
        #assert ( f_tNW )
        #assert ( f_tWH )

        #** ---------------------------------------------------------------------------------------
        #*  inicia a superclass
        #*/
        guiScopeModel.guiScopeModel.__init__ ( self, f_cm, f_srf, f_tNW, f_tWH )

        #** ---------------------------------------------------------------------------------------
        #*  inicia o vídeo sintético
        #*/
        self._vs = viewVideoSintetico.viewVideoSintetico ( f_cm, self._tWH )
        #assert ( self._vs )
                                                                                                
        #** ---------------------------------------------------------------------------------------
        #*  inicia as vídeo alidades
        #*/
        self._va = viewVideoAlidades.viewVideoAlidades ( f_cm, self._tWH )
        #assert ( self._va )
                                                                                                
        #** ---------------------------------------------------------------------------------------
        #*  inicia o vídeo bruto
        #*/
        self._vb = viewVideoBruto.viewVideoBruto ( f_cm, f_srf, f_tNW, f_tWH )
        #assert ( self._vb )

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*  guiScopeControle::doDraw
    #*  -------------------------------------------------------------------------------------------
    #*  desenha os elementos do scope
    #*  -------------------------------------------------------------------------------------------
    #*  @param  f_srf  - .
    #*  @param  f_oFlt - .
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def doDraw ( self, f_srf, f_oFlt=None ):

        #/ nome do método (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "guiScopeControle::doDraw"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( w_logLvl )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  verifica parâmetros de entrada
        #*/
        #assert ( f_srf )

        #** ---------------------------------------------------------------------------------------
        #*  verifica condições de execução
        #*/
        #assert ( self._va )
        #assert ( self._vb )
        #assert ( self._vs )

        #** ---------------------------------------------------------------------------------------
        #*  camada 1. transfere o desenho do vídeo sintético para o canvas
        #*/
        self._vs.doDraw ( f_srf )

        #** ---------------------------------------------------------------------------------------
        #*  camada 2. desenha as vídeo alidades no canvas
        #*/
        self._va.doDraw ( f_srf )

        #** ---------------------------------------------------------------------------------------
        #*  camada 3. desenha o vídeo bruto no canvas
        #*/
        self._vb.doDraw ( f_srf, f_oFlt )
                                                                                                
        #** ---------------------------------------------------------------------------------------
        #*  camada 4. moldura externa da área de scope
        #*/
        #pygame.draw.rect ( f_srf, locDefs.xCOR_RangeMark, (( 0, 0 ), ( 640, 480 )), 1 )

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*  guiScopeControle::doRedraw
    #*  -------------------------------------------------------------------------------------------
    #*  desenha os elementos do scope
    #*  -------------------------------------------------------------------------------------------
    #*  @param  f_cm - control manager
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def doRedraw ( self ):

        #/ nome do método (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "guiScopeControle::doRedraw"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( w_logLvl )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  camada 1. desenha o vídeo sintético no background
        #*/
        self.doRedrawVS ()
                                                                                                
        #** ---------------------------------------------------------------------------------------
        #*  camada 2. desenha as vídeo alidades no background
        #*/
        self.doRedrawVA ()
                                                                                                
        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*  guiScopeControle::doRedrawVA
    #*  -------------------------------------------------------------------------------------------
    #*  desenha os elementos do scope
    #*  -------------------------------------------------------------------------------------------
    #*  @param  f_cm - control manager
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def doRedrawVA ( self ):

        #/ nome do método (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "guiScopeControle::doRedrawVA"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( w_logLvl )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  camada 2. desenha as vídeo alidades no background
        #*/
        self._va.doRedraw ()
                                                                                                
        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*  guiScopeControle::doRedrawVS
    #*  -------------------------------------------------------------------------------------------
    #*  desenha os elementos do scope
    #*  -------------------------------------------------------------------------------------------
    #*  @param  f_cm - control manager
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def doRedrawVS ( self ):

        #/ nome do método (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "guiScopeControle::doRedrawVS"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( w_logLvl )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  camada 1. desenha o vídeo sintético no background
        #*/
        self._vs.doRedraw ()
                                                                                                
        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

    #** ===========================================================================================
    #*  acesso a área de dados do objeto
    #*  ===========================================================================================
    #*/

#** -----------------------------------------------------------------------------------------------
#*/
logger = logging.getLogger ( "guiScopeControle" )

#** -----------------------------------------------------------------------------------------------
#*/
logger.setLevel ( w_logLvl )

#** -----------------------------------------------------------------------------------------------
#*  this is the bootstrap process
#*/
if ( '__main__' == __name__ ):

    #** -------------------------------------------------------------------------------------------
    #*  m.poirot logger
    #*/
    logging.basicConfig ()
                
    #** -------------------------------------------------------------------------------------------
    #*
    l_gs = guiScopeControle ( None )
    #assert ( l_gs )
                            
#** ----------------------------------------------------------------------------------------------- *#
