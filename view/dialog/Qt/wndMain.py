#!/usr/bin/env python
# -*- coding: utf-8 -*-
#** -----------------------------------------------------------------------------------------------
#*  pyACME
#*  Copyright (c) 2010, Milton Abrunhosa
#*  -----------------------------------------------------------------------------------------------
#*  Package..: SiPAR
#*  Classe...: wndMain
#*
#*  Descrição: this class takes care of all interaction with the user
#*  -----------------------------------------------------------------------------------------------
#*  Detalhes de Alteração
#*  -----------------------------------------------------------------------------------------------
#*  well     1997/jun/20  version started
#*  mlabru   2009/set/01  version started
#*  -----------------------------------------------------------------------------------------------
#*  Detalhes de Versão
#*  -----------------------------------------------------------------------------------------------
#*  start    1997/jun/20  version started
#*  3.01-01  2009/set/01  DOCUMENT ME!
#*  -----------------------------------------------------------------------------------------------
#*/

#** -----------------------------------------------------------------------------------------------
#*  includes
#*  -----------------------------------------------------------------------------------------------
#*/

#/ Python library
#/ ------------------------------------------------------------------------------------------------
import os

#/ log4Py (logger)
#/ ------------------------------------------------------------------------------------------------
import logging

#/ PyQt library
#/ ------------------------------------------------------------------------------------------------
from PyQt4 import QtCore, QtGui

#/ SiPAR / model
#/ ------------------------------------------------------------------------------------------------
import model.locData as locData

#/ SiPAR / view
#/ ------------------------------------------------------------------------------------------------
import view.dialog.Qt.dlgConfigComm as dlgConfigComm

import view.dialog.Qt.wndMain_ui as wndMain_ui
import view.dialog.Qt.wndTabelaAnv as wndTabelaAnv
import view.dialog.Qt.wndTabelaExe as wndTabelaExe
import view.dialog.Qt.wndTabelaPAR as wndTabelaPAR

import view.wizard.wizardPAR as wizardPAR

#** -----------------------------------------------------------------------------------------------
#*  defines
#*  -----------------------------------------------------------------------------------------------
#*/

#** -----------------------------------------------------------------------------------------------
#*  variaveis globais
#*  -----------------------------------------------------------------------------------------------
#*/

#/ logging level
#/ ------------------------------------------------------------------------------------------------
#w_logLvl = logging.INFO
w_logLvl = logging.DEBUG

#** -----------------------------------------------------------------------------------------------
#*  wndMain::wndMain
#*  -----------------------------------------------------------------------------------------------
#*  DOCUMENT ME!
#*  -----------------------------------------------------------------------------------------------
#*  @param  DOCUMENT ME!
#*
#*  @return nenhum
#*  -----------------------------------------------------------------------------------------------
#*/
class wndMain ( QtGui.QMainWindow, wndMain_ui.Ui_wndMain ):

    #** -------------------------------------------------------------------------------------------
    #*  wndMain::__init__
    #*  -------------------------------------------------------------------------------------------
    #*  initializes the main menu
    #*  -------------------------------------------------------------------------------------------
    #*  @param  f_parent - DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def __init__ ( self, f_parent=None ):

        #/ nome do método (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "wndMain::__init__"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( w_logLvl )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  init super class
        #*/
        QtGui.QMainWindow.__init__ ( self )

        #** ---------------------------------------------------------------------------------------
        #*  create main menu Ui
        #*/
        self.setupUi ( self )

        #** ---------------------------------------------------------------------------------------
        #*  create connections
        #*/
        self.connect ( self._btnAnv, QtCore.SIGNAL ( "clicked()" ), self.cbkTabelaAnv )
        self.connect ( self._btnExe, QtCore.SIGNAL ( "clicked()" ), self.cbkTabelaExe )
        self.connect ( self._btnFim, QtCore.SIGNAL ( "clicked()" ), self.cbkSair )
        self.connect ( self._btnJoy, QtCore.SIGNAL ( "clicked()" ), self.cbkAjustarJoystick )
        self.connect ( self._btnPAR, QtCore.SIGNAL ( "clicked()" ), self.cbkTabelaPAR )
        self.connect ( self._btnPil, QtCore.SIGNAL ( "clicked()" ), self.cbkConfigSimula )

        #** ---------------------------------------------------------------------------------------
        #*/
        self._dlgTabAnv = None
        self._dlgTabExe = None
        self._dlgTabPAR = None

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*  wndMain::cbkAjustarJoystick
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  f_parent - DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def cbkAjustarJoystick ( self ):

        #/ nome do método (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "wndMain::cbkAjustarJoystick"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( w_logLvl )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*/
        print "Opção AjustarJoy selecionada...."

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*  wndMain::cbkConfigSimula
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  f_parent - DOCUMENT ME!
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def cbkConfigSimula ( self ):

        #/ nome do método (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "wndMain::cbkConfigSimula"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( w_logLvl )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  cria a wizard dialog
        #*/
        l_wzd = wizardPAR.wizardPAR ( self )
        #assert ( l_wzd )

        #** ---------------------------------------------------------------------------------------
        #*  executa a dialog em modo modal
        #*
        l_bOk = l_wzd.exec_ ()

        #** ---------------------------------------------------------------------------------------
        #*  to make sure it's gone, although the instance is local to the slot
        #*/
        del ( l_wzd )

        #** ---------------------------------------------------------------------------------------
        #*  ativa simulação ?
        #*/
        if ( l_bOk ):

            #** -----------------------------------------------------------------------------------
            #*  finaliza o sistema
            #*/
            self.close ()

            #** -----------------------------------------------------------------------------------
            #*  gera o arquivo de configuração do exercício
            #*/
            locData.g_oExe.makeExeConfig ()

            #** -----------------------------------------------------------------------------------
            #*  executa o simulador
            #*/
            os.execlp ( "python", "python", "piloto.py" )

        #** ---------------------------------------------------------------------------------------
        #*  senão, volta ao menu principal
        #*/
        else:

            #** -----------------------------------------------------------------------------------
            #*  exibe a janela principal
            #*/
            self.setVisible ( True )

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*  wndMain::cbkSair
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  nenhum
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def cbkSair ( self ):

        #/ nome do método (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "wndMain::cbkSair"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( w_logLvl )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  finaliza o sistema
        #*/
        self.close ()

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*  wndMain::cbkTabelaAnv
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  nenhum
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def cbkTabelaAnv ( self ):

        #/ nome do método (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "wndMain::cbkTabelaAnv"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( w_logLvl )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  já existe a tabela de aeronaves ?
        #*/
        #if ( locData.g_oTabAnv is None ):

            #** -----------------------------------------------------------------------------------
            #*  cria a tabela de aeronaves
            #*/
            #locData.g_oTabAnv = clsTabelaAnv.clsTabelaAnv ()
            ##assert ( locData.g_oTabAnv )

        #** ---------------------------------------------------------------------------------------
        #*  já existe a dialog de edição da tabela de aeronaves ?
        #*/
        if ( self._dlgTabAnv is None ):

            #** -----------------------------------------------------------------------------------
            #*  cria a dialog de edição da tabela de aeronaves
            #*/
            self._dlgTabAnv = wndTabelaAnv.wndTabelaAnv ( locData.g_oTabAnv, self )
            #assert ( self._dlgTabAnv )

        #** ---------------------------------------------------------------------------------------
        #*  exibe a dialog de edição da tabela de aeronave
        #*/
        self._dlgTabAnv.show ()

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*  wndMain::cbkTabelaExe
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  nenhum
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def cbkTabelaExe ( self ):

        #/ nome do método (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "wndMain::cbkTabelaExe"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( w_logLvl )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  já existe a tabela de exercícios ?
        #*/
        #if ( locData.g_oTabExe is None ):

            #** -----------------------------------------------------------------------------------
            #*  cria a tabela de exercícios
            #*/
            #locData.g_oTabExe = clsTabelaExe.clsTabelaExe ()
            ##assert ( locData.g_oTabExe )

        #** ---------------------------------------------------------------------------------------
        #*  já existe a dialog de edição da tabela de exercícios ?
        #*/
        if ( self._dlgTabExe is None ):

            #** -----------------------------------------------------------------------------------
            #*  cria a dialog de edição da tabela de exercícios
            #*/
            self._dlgTabExe = wndTabelaExe.wndTabelaExe ( locData.g_oTabExe, self )
            #assert ( self._dlgTabExe )

        #** ---------------------------------------------------------------------------------------
        #*  exibe a dialog de edição da tabela de exercícios
        #*/
        self._dlgTabExe.show ()

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

    #** -------------------------------------------------------------------------------------------
    #*  wndMain::cbkTabelaPAR
    #*  -------------------------------------------------------------------------------------------
    #*  DOCUMENT ME!
    #*  -------------------------------------------------------------------------------------------
    #*  @param  nenhum
    #*
    #*  @return nenhum
    #*  -------------------------------------------------------------------------------------------
    #*/
    def cbkTabelaPAR ( self ):

        #/ nome do método (logger)
        #/ ----------------------------------------------------------------------------------------
        #l_szMetodo = "wndMain::cbkTabelaPAR"


        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log = logging.getLogger ( l_szMetodo )
        #l_log.setLevel ( w_logLvl )
        #l_log.debug ( ">> " )

        #** ---------------------------------------------------------------------------------------
        #*  já existe a tabela de sítios PAR ?
        #*/
        #if ( locData.g_oTabPAR is None ):

            #** -----------------------------------------------------------------------------------
            #*  cria a tabela de sítios PAR
            #*/
            #locData.g_oTabPAR = clsTabelaPAR.clsTabelaPAR ()
            ##assert ( locData.g_oTabPAR )

        #** ---------------------------------------------------------------------------------------
        #*  já existe a dialog de edição da tabela de sítios PAR ?
        #*/
        if ( self._dlgTabPAR is None ):

            #** -----------------------------------------------------------------------------------
            #*  cria a dialog de edição da tabela de PAR's
            #*/
            self._dlgTabPAR = wndTabelaPAR.wndTabelaPAR ( locData.g_oTabPAR, self )
            #assert ( self._dlgTabPAR )

        #** ---------------------------------------------------------------------------------------
        #*  exibe a dialog de edição da tabela de PAR's
        #*/
        self._dlgTabPAR.show ()

        #** ---------------------------------------------------------------------------------------
        #*  m.poirot logger
        #*/
        #l_log.debug ( "<< " )

#** ----------------------------------------------------------------------------------------------- *#
